<?php

namespace Geolocation\AdminBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function findEntrepriseLike( $term, $limit = 10 )
    {
        $term = strtr($term, 'ÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ', 'AAAAAACEEEEEIIIINOOOOOUUUUY');
        $term = strtr($term, 'áàâäãåçéèêëíìîïñóòôöõúùûüýÿ', 'aaaaaaceeeeiiiinooooouuuuyy');
        $qb = $this->createQueryBuilder('s');
        $qb ->select('s.nom')
            ->where('s.nom LIKE :term')
            ->orWhere('s.nom LIKE :termNoSpace')
            ->andWhere('s.enabled = :enabled')
            ->setParameters(['term' => '%' . $term . '%', 'termNoSpace' => '%' . str_replace(' ', '-', $term) . '%', 'enabled' => 1])
            ->orderBy('s.nom')
            ->setMaxResults($limit);

        $arrayAss= $qb->getQuery()
            ->getArrayResult();

        // Transformer le tableau associatif en un tableau standard
        $array = array();
        foreach($arrayAss as $data)
        {
            $array[] = array("Entreprise"=>$data['nom']);
        }

        return $array;
    }

    public function findEntrepriseCustom( $term, $limit = 10 )
    {
        $term = strtr($term, 'ÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ', 'AAAAAACEEEEEIIIINOOOOOUUUUY');
        $term = strtr($term, 'áàâäãåçéèêëíìîïñóòôöõúùûüýÿ', 'aaaaaaceeeeiiiinooooouuuuyy');
        $qb = $this->createQueryBuilder('s')
            ->where('s.nom LIKE :term')
            ->orWhere('s.nom LIKE :termNoSpace')
            ->andWhere('s.enabled = :enabled')
            ->setParameters(['term' => '%' . $term . '%', 'termNoSpace' => '%' . str_replace(' ', '-', $term) . '%', 'enabled' => 1])
            ->orderBy('s.nom')
            ->setMaxResults($limit);

        return $qb->getQuery()->getOneOrNullResult();
    }
}
