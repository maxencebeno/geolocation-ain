<?php

namespace Geolocation\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CpfRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CpfRepository extends EntityRepository
{

    public function findByCpf(array $params = []) {
        $qb = $this->createQueryBuilder('c')
            ->where('c.section = :section');
        if ($params['groupe'] !== "-1") {
            $qb->andWhere('c.groupe = :groupe');
            $qb->setParameter('groupe', $params['groupe']);
        }
        if ($params['division'] !== "-1") {
            $qb->andWhere('c.division = :division');
            $qb->setParameter('division', $params['division']);
        }
        
        $qb->setParameter('section', $params['section']);
        
        return $qb->getQuery()->getResult();
    }

    public function findCodeNafLike($term, $limit = 25) {
        $term = strtr($term, 'ÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ', 'AAAAAACEEEEEIIIINOOOOOUUUUY');
        $term = strtr($term, 'áàâäãåçéèêëíìîïñóòôöõúùûüýÿ', 'aaaaaaceeeeiiiinooooouuuuyy');
        $qb = $this->createQueryBuilder('c');
        $qb->select('c.nom, s.libelle, c.id')
            ->innerJoin('Geolocation\AdminBundle\Entity\SousCategorie', 's', 'WITH', 'c.souscategorie = s.id')
            ->where('c.nom LIKE :term')
            ->orWhere('c.nom LIKE :termNoPoint')
            ->orWhere('s.libelle LIKE :term')
            ->setParameters(['term' => '%' . $term . '%', 'termNoPoint' => '%' . str_replace('.', '', $term) . '%'])
            ->setMaxResults($limit);

        $arrayAss = $qb->getQuery()
            ->getArrayResult();

        // Transformer le tableau associatif en un tableau standard
        $array = array();
        foreach ($arrayAss as $data) {
            $array[] = array("Codes" => ['libelle' => $data['nom'] . ' ' . $data['libelle'], 'id' => $data['id']]);
        }

        return $array;
    }
}
